{"ast":null,"code":"import _classCallCheck from \"/Users/augustusrizza/javascript_projects/blog/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/augustusrizza/javascript_projects/blog/frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/augustusrizza/javascript_projects/blog/frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/augustusrizza/javascript_projects/blog/frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/augustusrizza/javascript_projects/blog/frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/augustusrizza/javascript_projects/blog/frontend/src/Comments.js\";\nimport keys from \"./lib/key\";\nimport React, { Component } from 'react';\nimport dateFormat from 'dateformat';\n\nvar Com =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Com, _Component);\n\n  function Com() {\n    _classCallCheck(this, Com);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Com).apply(this, arguments));\n  }\n\n  _createClass(Com, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"article\", {\n        className: \"uk-comment\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 8\n        },\n        __self: this\n      }, React.createElement(\"header\", {\n        className: \"uk-comment-header uk-grid-medium uk-flex-middle\",\n        \"uk-grid\": \"true\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 9\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"uk-width-auto\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 10\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        \"uk-icon\": \"icon: user; ratio: 2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 11\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"uk-width-expand\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        className: \"uk-comment-title uk-margin-remove\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        className: \"uk-link-reset\",\n        href: \"#\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15\n        },\n        __self: this\n      }, this.props.comment.user), React.createElement(\"ul\", {\n        class: \"uk-comment-meta uk-subnav uk-subnav-divider uk-margin-remove-top\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        href: \"#\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      }, dateFormat(this.props.comment.date, \"dddd, mmmm dS, yyyy\"))))))), React.createElement(\"div\", {\n        className: \"uk-comment-body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, this.props.comment.comment)));\n    }\n  }]);\n\n  return Com;\n}(Component);\n\nvar Comments =\n/*#__PURE__*/\nfunction (_Component2) {\n  _inherits(Comments, _Component2);\n\n  function Comments(props) {\n    var _this;\n\n    _classCallCheck(this, Comments);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Comments).call(this, props));\n    _this.state = {\n      comments: null\n    };\n    return _this;\n  }\n\n  _createClass(Comments, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      console.log(this.props);\n      fetch(\"http://localhost:5000/comments/\".concat(this.props.post), {\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        method: \"POST\",\n        body: JSON.stringify({\n          \"client_api_key\": keys.blog_post_api_key\n        })\n      }).then(function (Response) {\n        Response.json().then(function (res) {\n          _this2.setState({\n            comments: res.sort(function (a, b) {\n              // Turn your strings into dates, and then subtract them to get a value that is\n              // either negative, positive, or zero.\n              return new Date(b.date) - new Date(a.date);\n            })\n          });\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (this.state.comments !== null) {\n        return React.createElement(\"ul\", {\n          className: \"uk-comment-list\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67\n          },\n          __self: this\n        }, this.state.comments.map(function (element, i) {\n          return React.createElement(Com, {\n            key: i,\n            comment: element,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 72\n            },\n            __self: this\n          });\n        }));\n      } else {\n        return React.createElement(\"div\", {\n          className: \"App uk-transition-toggle\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78\n          },\n          __self: this\n        }, React.createElement(\"center\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          \"uk-spinner\": \"ratio: 4.5\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80\n          },\n          __self: this\n        })));\n      }\n    }\n  }]);\n\n  return Comments;\n}(Component);\n\nexport default Comments;","map":{"version":3,"sources":["/Users/augustusrizza/javascript_projects/blog/frontend/src/Comments.js"],"names":["keys","React","Component","dateFormat","Com","props","comment","user","date","Comments","state","comments","console","log","fetch","post","headers","method","body","JSON","stringify","blog_post_api_key","then","Response","json","res","setState","sort","a","b","Date","map","element","i"],"mappings":"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","sourcesContent":["import keys from \"./lib/key\";\nimport React, {Component} from 'react';\nimport dateFormat from 'dateformat';\n\nclass Com extends Component {\n    render() {\n        return (\n            <article className=\"uk-comment\">\n                <header className=\"uk-comment-header uk-grid-medium uk-flex-middle\" uk-grid=\"true\">\n                <div class=\"uk-width-auto\">\n                    <span uk-icon=\"icon: user; ratio: 2\"></span>\n                </div>\n                    <div className=\"uk-width-expand\">\n                        <h4 className=\"uk-comment-title uk-margin-remove\">\n                            <a className=\"uk-link-reset\" href=\"#\">{this.props.comment.user}</a>\n                            <ul class=\"uk-comment-meta uk-subnav uk-subnav-divider uk-margin-remove-top\">\n                                <li><a href=\"#\">{dateFormat(this.props.comment.date, \"dddd, mmmm dS, yyyy\")}</a></li>\n                            </ul>\n                        </h4>\n                    </div>\n                </header>\n                <div className=\"uk-comment-body\">\n                    <p>{this.props.comment.comment}</p>\n                </div>\n            </article>\n\n        );\n    }\n}\n\nclass Comments extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            comments: null\n        }\n    }\n\n    componentDidMount() {\n        console.log(this.props)\n        fetch(`http://localhost:5000/comments/${this.props.post}`, {\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n            method: \"POST\",\n            body: JSON.stringify({\"client_api_key\": keys.blog_post_api_key})\n\n        }).then(Response => {\n            Response\n                .json()\n                .then(res => {\n                    this.setState({\n                        comments: res.sort(function (a, b) {\n                            // Turn your strings into dates, and then subtract them to get a value that is\n                            // either negative, positive, or zero.\n                            return new Date(b.date) - new Date(a.date);\n                        })\n                    })\n                });\n        });\n    }\n\n    render() {\n        if (this.state.comments !== null) {\n            return (\n                <ul className=\"uk-comment-list\">\n                    {this\n                        .state\n                        .comments\n                        .map((element, i) => {\n                            return (<Com key={i} comment={element}/>)\n                        })}\n                </ul>\n            );\n        } else {\n            return (\n                <div className=\"App uk-transition-toggle\">\n                    <center>\n                        <span uk-spinner=\"ratio: 4.5\"></span>\n                    </center>\n                </div>\n            )\n        }\n    }\n}\n\nexport default Comments;"]},"metadata":{},"sourceType":"module"}