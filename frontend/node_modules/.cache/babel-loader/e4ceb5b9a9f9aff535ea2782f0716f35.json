{"ast":null,"code":"import _classCallCheck from \"/Users/augustusrizza/javascript_projects/blog/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/augustusrizza/javascript_projects/blog/frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/augustusrizza/javascript_projects/blog/frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/augustusrizza/javascript_projects/blog/frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/augustusrizza/javascript_projects/blog/frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/augustusrizza/javascript_projects/blog/frontend/src/Comments.js\";\nimport keys from \"./lib/key\";\nimport React, { Component } from 'react';\nimport dateFormat from 'dateformat';\n\nvar Com =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Com, _Component);\n\n  function Com() {\n    _classCallCheck(this, Com);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Com).apply(this, arguments));\n  }\n\n  _createClass(Com, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 8\n        },\n        __self: this\n      }, React.createElement(\"article\", {\n        className: \"uk-comment uk-comment-primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 9\n        },\n        __self: this\n      }, React.createElement(\"header\", {\n        className: \"uk-comment-header uk-grid-medium uk-flex-middle\",\n        \"uk-grid\": \"true\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 10\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"uk-width-auto\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        \"uk-icon\": \"icon: user; ratio: 2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"uk-width-expand\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        className: \"uk-comment-title uk-margin-remove\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      }, this.props.comment.user, React.createElement(\"ul\", {\n        className: \"uk-comment-meta uk-subnav uk-subnav-divider uk-margin-remove-top\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, dateFormat(this.props.comment.date, \"dddd, mmmm dS, yyyy\")))))), React.createElement(\"div\", {\n        className: \"uk-comment-body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, this.props.comment.comment))));\n    }\n  }]);\n\n  return Com;\n}(Component);\n\nvar AddComment =\n/*#__PURE__*/\nfunction (_Component2) {\n  _inherits(AddComment, _Component2);\n\n  function AddComment() {\n    _classCallCheck(this, AddComment);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(AddComment).apply(this, arguments));\n  }\n\n  _createClass(AddComment, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(\"fieldset\", {\n        className: \"uk-fieldset\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(\"textarea\", {\n        className: \"uk-textarea\",\n        rows: \"5\",\n        placeholder: \"add a comment\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return AddComment;\n}(Component);\n\nvar Comments =\n/*#__PURE__*/\nfunction (_Component3) {\n  _inherits(Comments, _Component3);\n\n  function Comments(props) {\n    var _this;\n\n    _classCallCheck(this, Comments);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Comments).call(this, props));\n    _this.state = {\n      comments: null\n    };\n    return _this;\n  }\n\n  _createClass(Comments, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      fetch(\"http://localhost:5000/comments/\".concat(this.props.post), {\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        method: \"POST\",\n        body: JSON.stringify({\n          \"client_api_key\": keys.blog_post_api_key\n        })\n      }).then(function (Response) {\n        Response.json().then(function (res) {\n          if (res.length > 0) {\n            _this2.setState({\n              comments: res\n            });\n          } else {\n            _this2.setState({\n              comments: \"No Comments Yet\"\n            });\n          }\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (this.state.comments !== null) {\n        switch (typeof this.state.comments) {\n          case \"object\":\n            return React.createElement(\"div\", {\n              className: \"uk-container uk-margin-large uk-width-1-2\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 87\n              },\n              __self: this\n            }, React.createElement(\"ul\", {\n              className: \"uk-comment-list\",\n              style: {\n                marginTop: \"30px !important\"\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 88\n              },\n              __self: this\n            }, this.state.comments.map(function (element, i) {\n              return React.createElement(Com, {\n                key: i,\n                comment: element,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 97\n                },\n                __self: this\n              });\n            })), React.createElement(AddComment, {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 100\n              },\n              __self: this\n            }));\n\n          default:\n            return React.createElement(\"div\", {\n              className: \"uk-container uk-margin-large uk-width-1-2\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 105\n              },\n              __self: this\n            }, React.createElement(\"h4\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 106\n              },\n              __self: this\n            }, this.state.comments), React.createElement(AddComment, {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 107\n              },\n              __self: this\n            }));\n        }\n      } else {\n        return React.createElement(\"div\", {\n          className: \"uk-transition-toggle\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 113\n          },\n          __self: this\n        }, React.createElement(\"center\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 114\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          \"uk-spinner\": \"ratio: 4.5\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 115\n          },\n          __self: this\n        })));\n      }\n    }\n  }]);\n\n  return Comments;\n}(Component);\n\nexport default Comments;","map":{"version":3,"sources":["/Users/augustusrizza/javascript_projects/blog/frontend/src/Comments.js"],"names":["keys","React","Component","dateFormat","Com","props","comment","user","date","AddComment","Comments","state","comments","fetch","post","headers","method","body","JSON","stringify","blog_post_api_key","then","Response","json","res","length","setState","marginTop","map","element","i"],"mappings":"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","sourcesContent":["import keys from \"./lib/key\";\nimport React, {Component} from 'react';\nimport dateFormat from 'dateformat';\n\nclass Com extends Component {\n    render() {\n        return (\n            <li>\n                <article className=\"uk-comment uk-comment-primary\">\n                    <header\n                        className=\"uk-comment-header uk-grid-medium uk-flex-middle\"\n                        uk-grid=\"true\">\n                        <div className=\"uk-width-auto\">\n                            <span uk-icon=\"icon: user; ratio: 2\"></span>\n                        </div>\n                        <div className=\"uk-width-expand\">\n                            <h4 className=\"uk-comment-title uk-margin-remove\">\n                                {this.props.comment.user}\n                                <ul\n                                    className=\"uk-comment-meta uk-subnav uk-subnav-divider uk-margin-remove-top\">\n                                    <li>\n                                        {dateFormat(this.props.comment.date, \"dddd, mmmm dS, yyyy\")}\n                                    </li>\n                                </ul>\n                            </h4>\n                        </div>\n                    </header>\n                    <div className=\"uk-comment-body\">\n                        <p>{this.props.comment.comment}</p>\n                    </div>\n                </article>\n            </li>\n\n        );\n    }\n}\n\nclass AddComment extends Component {\n    render() {\n        return (\n            <div>\n                <form>\n                    <fieldset className=\"uk-fieldset\">\n                        <textarea className=\"uk-textarea\" rows=\"5\" placeholder=\"add a comment\"></textarea>\n                    </fieldset>\n                </form>\n            </div>\n        )\n    }\n}\n\nclass Comments extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            comments: null\n        }\n    }\n\n    componentDidMount() {\n        fetch(`http://localhost:5000/comments/${this.props.post}`, {\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n            method: \"POST\",\n            body: JSON.stringify({\"client_api_key\": keys.blog_post_api_key})\n\n        }).then(Response => {\n            Response\n                .json()\n                .then(res => {\n                    if (res.length > 0) {\n                        this.setState({comments: res})\n                    } else {\n                        this.setState({comments: \"No Comments Yet\"})\n                    }\n                });\n        });\n    }\n\n    render() {\n        if (this.state.comments !== null) {\n            switch (typeof(this.state.comments)) {\n                case \"object\":\n                    return (\n                        <div className=\"uk-container uk-margin-large uk-width-1-2\">\n                            <ul\n                                className=\"uk-comment-list\"\n                                style={{\n                                marginTop: \"30px !important\"\n                            }}>\n                                {this\n                                    .state\n                                    .comments\n                                    .map((element, i) => {\n                                        return (<Com key={i} comment={element}/>)\n                                    })}\n                            </ul>\n                            <AddComment/>\n                        </div>\n                    )\n                default:\n                    return (\n                        <div className=\"uk-container uk-margin-large uk-width-1-2\">\n                            <h4>{this.state.comments}</h4>\n                            <AddComment/>\n                        </div>\n                    )\n            }\n        } else {\n            return (\n                <div className=\"uk-transition-toggle\">\n                    <center>\n                        <span uk-spinner=\"ratio: 4.5\"></span>\n                    </center>\n                </div>\n            )\n        }\n    }\n}\n\nexport default Comments;"]},"metadata":{},"sourceType":"module"}