{"ast":null,"code":"import _classCallCheck from \"/Users/augustusrizza/javascript_projects/blog/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/augustusrizza/javascript_projects/blog/frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport SHA256 from 'crypto-js/sha256';\n\nvar encrypt =\n/*#__PURE__*/\nfunction () {\n  function encrypt() {\n    _classCallCheck(this, encrypt);\n  }\n\n  _createClass(encrypt, [{\n    key: \"sha\",\n    value: function sha(e) {\n      return SHA256(e).toString();\n    }\n  }, {\n    key: \"get_current_time\",\n    value: function get_current_time() {\n      return new Date().valueOf().toString();\n    }\n  }, {\n    key: \"get_random\",\n    value: function get_random() {\n      return Math.random().toString();\n    }\n  }, {\n    key: \"create_new_set\",\n    value: function create_new_set(e) {\n      var f = this.sha(this.get_current_time() + this.get_random());\n      return {\n        \"salt\": f,\n        \"password\": this.sha(f + e)\n      };\n    }\n  }, {\n    key: \"reproduce_set\",\n    value: function reproduce_set(e, f) {\n      return {\n        \"password\": this.sha(f + e)\n      };\n    }\n  }]);\n\n  return encrypt;\n}();\n\nexport default encrypt;","map":{"version":3,"sources":["/Users/augustusrizza/javascript_projects/blog/frontend/src/encrypt.js"],"names":["SHA256","encrypt","e","toString","Date","valueOf","Math","random","f","sha","get_current_time","get_random"],"mappings":";;AAAA,OAAOA,MAAP,MAAmB,kBAAnB;;IAEMC,O;;;;;;;;;wBACEC,C,EAAG;AACH,aAAOF,MAAM,CAACE,CAAD,CAAN,CAAUC,QAAV,EAAP;AACH;;;uCACkB;AACf,aAAQ,IAAIC,IAAJ,EAAD,CAAaC,OAAb,GAAuBF,QAAvB,EAAP;AACH;;;iCACY;AACT,aAAOG,IAAI,CAACC,MAAL,GAAcJ,QAAd,EAAP;AACH;;;mCACcD,C,EAAG;AACd,UAAIM,CAAC,GAAG,KAAKC,GAAL,CAAW,KAAKC,gBAAL,KAA0B,KAAKC,UAAL,EAArC,CAAR;AACA,aAAO;AACH,gBAASH,CADN;AAEH,oBAAa,KAAKC,GAAL,CAASD,CAAC,GAAGN,CAAb;AAFV,OAAP;AAIH;;;kCACaA,C,EAAEM,C,EAAG;AACf,aAAO;AACH,oBAAa,KAAKC,GAAL,CAASD,CAAC,GAAGN,CAAb;AADV,OAAP;AAGH;;;;;;AAKL,eAAeD,OAAf","sourcesContent":["import SHA256 from 'crypto-js/sha256'\n\nclass encrypt {\n    sha(e) {\n        return SHA256(e).toString()\n    }\n    get_current_time() {\n        return (new Date()).valueOf().toString();\n    }\n    get_random() {\n        return Math.random().toString();\n    }\n    create_new_set(e) {\n        let f = this.sha( (this.get_current_time() + this.get_random()));\n        return {\n            \"salt\" : f,\n            \"password\" : this.sha(f + e)\n        }\n    }\n    reproduce_set(e,f) {\n        return {\n            \"password\" : this.sha(f + e)\n        }\n    }\n\n\n}\n\nexport default encrypt;"]},"metadata":{},"sourceType":"module"}