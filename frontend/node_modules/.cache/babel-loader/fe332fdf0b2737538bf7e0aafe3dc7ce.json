{"ast":null,"code":"import env from \"./env\";\nimport keys from \"./lib/key\";\nvar auth = {\n  user: function user(_) {\n    return {\n      username: localStorage.getItem(\"username\"),\n      token: localStorage.getItem(\"token\")\n    };\n  },\n  isSignedIn: function isSignedIn() {\n    return new Promise(function (resolve, reject) {\n      fetch(\"\".concat(env.getCurrent().api, \"checktoken\"), {\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        cache: \"force-cache\",\n        method: \"POST\",\n        body: JSON.stringify({\n          \"client_api_key\": keys.blog_post_api_key,\n          \"token\": auth.user().token\n        })\n      }).then(function (res) {\n        res.json().then(function (res) {\n          res = JSON.parse(res);\n\n          if (res.type === \"sucsess\") {\n            resolve({\n              isSignedIn: true\n            });\n          } else if (res.type === \"error\") {\n            resolve({\n              isSignedIn: false\n            });\n            auth.signOut();\n          } else {\n            reject(\"Error\");\n          }\n        });\n      });\n    });\n  },\n  signOut: function signOut() {\n    if (localStorage.getItem(\"user-signed-in\") === \"false\" ? false : true) {\n      localStorage.clear();\n      window.location.reload();\n    }\n  },\n  isAValidUser: function isAValidUser() {},\n  canBeHere: function canBeHere() {\n    var url = window.location.href;\n    var userTypes = {\n      \"NOT_SIGNED_IN\": [\"/\"],\n      \"AUTHOR\": [\"/\", \"/dashboard/analytics\", \"/createpost\", \"/editprofile\"],\n      \"BASIC_USER\": [\"/\", \"/editprofile\"]\n    };\n\n    switch (localStorage.getItem(\"type\")) {\n      case \"author\":\n        if (!userTypes.AUTHOR.contains(url)) {\n          window.location = \"/\";\n        }\n\n        break;\n\n      case \"basic user\":\n        break;\n\n      case null:\n        break;\n\n      default:\n        break;\n    }\n  }\n};\nexport default auth;","map":{"version":3,"sources":["/Users/augustusrizza/javascript_projects/blog/frontend/src/auth.js"],"names":["env","keys","auth","user","_","username","localStorage","getItem","token","isSignedIn","Promise","resolve","reject","fetch","getCurrent","api","headers","cache","method","body","JSON","stringify","blog_post_api_key","then","res","json","parse","type","signOut","clear","window","location","reload","isAValidUser","canBeHere","url","href","userTypes","AUTHOR","contains"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,OAAhB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AAEA,IAAIC,IAAI,GAAG;AACPC,EAAAA,IAAI,EAAE,cAAAC,CAAC,EAAI;AACP,WAAO;AACHC,MAAAA,QAAQ,EAAEC,YAAY,CAACC,OAAb,CAAqB,UAArB,CADP;AAEHC,MAAAA,KAAK,EAAEF,YAAY,CAACC,OAAb,CAAqB,OAArB;AAFJ,KAAP;AAIH,GANM;AAOPE,EAAAA,UAAU,EAAE,sBAAM;AACd,WAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpCC,MAAAA,KAAK,WAAIb,GAAG,CAACc,UAAJ,GAAiBC,GAArB,iBAAsC;AACvCC,QAAAA,OAAO,EAAE;AACL,oBAAU,kBADL;AAEL,0BAAgB;AAFX,SAD8B;AAKvCC,QAAAA,KAAK,EAAE,aALgC;AAMvCC,QAAAA,MAAM,EAAE,MAN+B;AAOvCC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjB,4BAAkBpB,IAAI,CAACqB,iBADN;AAEjB,mBAASpB,IAAI,CAACC,IAAL,GAAYK;AAFJ,SAAf;AAPiC,OAAtC,CAAL,CAYGe,IAZH,CAYQ,UAAAC,GAAG,EAAI;AACXA,QAAAA,GAAG,CAACC,IAAJ,GACKF,IADL,CACU,UAAAC,GAAG,EAAI;AACTA,UAAAA,GAAG,GAAGJ,IAAI,CAACM,KAAL,CAAWF,GAAX,CAAN;;AACA,cAAIA,GAAG,CAACG,IAAJ,KAAa,SAAjB,EAA4B;AACxBhB,YAAAA,OAAO,CAAC;AACJF,cAAAA,UAAU,EAAE;AADR,aAAD,CAAP;AAGH,WAJD,MAIO,IAAIe,GAAG,CAACG,IAAJ,KAAa,OAAjB,EAA0B;AAC7BhB,YAAAA,OAAO,CAAC;AACJF,cAAAA,UAAU,EAAE;AADR,aAAD,CAAP;AAGAP,YAAAA,IAAI,CAAC0B,OAAL;AACH,WALM,MAKA;AACHhB,YAAAA,MAAM,CAAC,OAAD,CAAN;AACH;AACJ,SAfL;AAgBH,OA7BD;AA8BH,KA/BM,CAAP;AAgCH,GAxCM;AAyCPgB,EAAAA,OAAO,EAAE,mBAAM;AACX,QAAKtB,YAAY,CAACC,OAAb,CAAqB,gBAArB,MAA2C,OAA3C,GAAqD,KAArD,GAA6D,IAAlE,EAAyE;AACrED,MAAAA,YAAY,CAACuB,KAAb;AACAC,MAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB;AACH;AAEJ,GA/CM;AAgDPC,EAAAA,YAAY,EAAE,wBAAM,CAEnB,CAlDM;AAmDPC,EAAAA,SAAS,EAAE,qBAAM;AACb,QAAIC,GAAG,GAAGL,MAAM,CAACC,QAAP,CAAgBK,IAA1B;AACA,QAAIC,SAAS,GAAG;AACZ,uBAAiB,CAAC,GAAD,CADL;AAEZ,gBAAU,CAAC,GAAD,EAAM,sBAAN,EAA8B,aAA9B,EAA6C,cAA7C,CAFE;AAGZ,oBAAc,CAAC,GAAD,EAAM,cAAN;AAHF,KAAhB;;AAKA,YAAO/B,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAP;AACI,WAAK,QAAL;AACI,YAAG,CAAC8B,SAAS,CAACC,MAAV,CAAiBC,QAAjB,CAA0BJ,GAA1B,CAAJ,EAAmC;AAC/BL,UAAAA,MAAM,CAACC,QAAP,GAAkB,GAAlB;AACH;;AACD;;AACJ,WAAK,YAAL;AACI;;AACJ,WAAK,IAAL;AACI;;AACJ;AACI;AAXR;AAcH;AAxEM,CAAX;AA2EA,eAAe7B,IAAf","sourcesContent":["import env from \"./env\";\nimport keys from \"./lib/key\"\n\nlet auth = {\n    user: _ => {\n        return {\n            username: localStorage.getItem(\"username\"),\n            token: localStorage.getItem(\"token\")\n        }\n    },\n    isSignedIn: () => {\n        return new Promise((resolve, reject) => {\n            fetch(`${env.getCurrent().api}checktoken`, {\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                },\n                cache: \"force-cache\",\n                method: \"POST\",\n                body: JSON.stringify({\n                    \"client_api_key\": keys.blog_post_api_key,\n                    \"token\": auth.user().token\n                })\n\n            }).then(res => {\n                res.json()\n                    .then(res => {\n                        res = JSON.parse(res)\n                        if (res.type === \"sucsess\") {\n                            resolve({\n                                isSignedIn: true\n                            })\n                        } else if (res.type === \"error\") {\n                            resolve({\n                                isSignedIn: false\n                            })\n                            auth.signOut();\n                        } else {\n                            reject(\"Error\")\n                        }\n                    })\n            })\n        });\n    },\n    signOut: () => {\n        if ((localStorage.getItem(\"user-signed-in\") === \"false\" ? false : true)) {\n            localStorage.clear()\n            window.location.reload();\n        }\n\n    },\n    isAValidUser: () => {\n\n    },\n    canBeHere: () => {\n        let url = window.location.href;\n        let userTypes = {\n            \"NOT_SIGNED_IN\": [\"/\"],\n            \"AUTHOR\": [\"/\", \"/dashboard/analytics\", \"/createpost\", \"/editprofile\"],\n            \"BASIC_USER\": [\"/\", \"/editprofile\"]\n        }\n        switch(localStorage.getItem(\"type\")) {\n            case \"author\" :\n                if(!userTypes.AUTHOR.contains(url)){\n                    window.location = \"/\";\n                }\n                break;\n            case \"basic user\" :\n                break;\n            case null :\n                break;\n            default :\n                break;\n\n        }\n    }\n};\n\nexport default auth;"]},"metadata":{},"sourceType":"module"}